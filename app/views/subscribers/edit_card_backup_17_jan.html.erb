<% meta title: "Payment" %>
<% @minimal_layout = true %>

<script src="https://js.stripe.com/v3/"></script>
<script>
    window.addEventListener('DOMContentLoaded', (event) => {
        const stripe = Stripe("<%= ENV["STRIPE_PUBLISHABLE_KEY"] %>");
        let elements;
        let subscriptionCreateUrl;
        let paymentElement;

        initialize();
        setSubscriptionReturnUrl();

        document.querySelector("#payment-form").addEventListener("submit", handleSubmit);
        document.querySelector("#subscription_interval").addEventListener("click", setSubscriptionReturnUrl);

        // Fetches a payment intent and captures the client secret
        function initialize() {
            elements = stripe.elements({
                clientSecret: "<%= @setup_intent.client_secret %>",
                appearance: {
                    theme: 'none',

                    rules: {
                        '.Label': {
                            fontWeight: '800',
                            fontFamily: '"Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif',
                            fontSize: '16px',
                            color: '#0d0b05',
                            marginBottom: '5px',
                        },

                        '.Input': {
                            color: '#473917',
                            backgroundColor: '#f4f4f4',
                            fontSize: '18px',
                            padding: '10px 11px',
                            border: '4px solid #f4f4f4',
                        },

                        '.Input:focus': {
                            border: '4px solid #f7a3b7',
                            boxShadow: '0 0 0 4px #fad4db',
                            outline: 'unset',
                        },

                        '.Input--invalid': {
                            color: '#e21124',
                        },

                        '.Input::placeholder': {
                            color: '#86878c',
                        },

                        '.Error': {
                            color: '#e21124',
                        },
                    }
                },
                loader: 'never',
            });

            paymentElement = elements.create("payment");

            paymentElement.mount("#payment-element");
            paymentElement.on('ready', function() {
                document.querySelector('.js-payment-form-spinner-wrapper').classList.add('d-none');
                document.querySelector('.js-payment-form').classList.remove('opacity-0');
            })
        }

        function setSubscriptionReturnUrl() {
            const subscriptionInterval = document.querySelector("#subscription_interval");

            if (subscriptionInterval.checked) {
                subscriptionCreateUrl = "<%= update_card_url(yearly: true) %>"
            } else {
                subscriptionCreateUrl = "<%= update_card_url(yearly: false) %>"
            }
        }

        function handleSubmit(e) {
            alert('hello123')
            e.preventDefault();

            setTimeout(() => {
                //this.setState({ loading: true }); // This is the line that causes the issue
                console.log('creating token');
                //alert(paymentElement)
                //var cardElement = elements.create('card');
                //var paymentElement123 = elements.create('payment');
                //cardElement.mount("#card-element");
                //paymentElement.mount("#payment-element");
                stripe.card.createToken(paymentElement).then(function(result) {
                    console.log("===== in create token function")
                    console.log(result)
                    alert(result)
                    console.log('===== token created');
                })

            }, 6000);


            // var cardElement = elements.create('card');
            // console.log("====== if ")
            // console.log(cardElement)
            // stripe.createToken(cardElement).then(function(result) {
            //     // Handle result.error or result.token
            //     alert(result)
            //     console.log(result)
            //
            // });
            // console.log("====== if ")
            //alert('123456')
            // e.preventDefault();
            //setLoading(true);

            // const { error } = await stripe.confirmSetup({
            //     elements,
            //     confirmParams: {
            //         return_url: subscriptionCreateUrl,
            //     },
            // });



            // if (error.type === "card_error" || error.type === "validation_error") {
            //   showMessage(error.message);
            // } else {
            //   showMessage("An unexpected error occured.");
            // }

            //setLoading(false);
        }

        // function showMessage(messageText) {
        //   const messageContainer = document.querySelector("#payment-message");

        //   messageContainer.classList.remove("hidden");
        //   messageContainer.textContent = messageText;

        //   setTimeout(function () {
        //     messageContainer.classList.add("hidden");
        //     messageText.textContent = "";
        //   }, 4000);
        // }

        // Show a spinner on payment submission
        function setLoading(isLoading) {
            if (isLoading) {
                // Disable the button and show a spinner
                document.querySelector("#submit").disabled = true;
                document.querySelector("#spinner").classList.remove("d-none");
                document.querySelector("#button-text").classList.add("d-none");
            } else {
                document.querySelector("#submit").disabled = false;
                document.querySelector("#spinner").classList.add("d-none");
                document.querySelector("#button-text").classList.remove("d-none");
            }
        }
    });
</script>

<div class="container-xl">
  <div class="row justify-content-md-center gy-5 gy-md-0">
    <div class="col-md-12 col-lg-11 col-xl-9 col-xxl-8"
         data-controller="pricing-switch"
         data-pricing-switch-monthly-billing-value="<%= I18n.t('free_trial.after_monthly_free_trial_price') %> monthly"
         data-pricing-switch-yearly-billing-value="<%= I18n.t('free_trial.billed_annually') %> annually">
      <div class="fw-black text-primary d-block" id='free-trial-price-yearly'>Just £<%= I18n.t('free_trial.price_yearly') %> a day!</div>
      <div class="fw-black text-primary d-none" id='free-trial-price-monthly'>Just £<%= I18n.t('free_trial.price_monthly') %> a day!</div>
      <div class="d-ffvlex align-items-center my-3">
        <span class="fw-black text-dark">Bill yearly</span>
        <div class="form-switch-inversed form-check form-switch mb-0 mx-3">
          <%= check_box_tag :subscription_interval, nil, true, class: "form-check-input mt-0", data: {action: "pricing-switch#showMonthlyPrice"},
                            onclick: 'handleYearlyMonthlySwitch(this)' %>
        </div>
        <span class="fw-black text-dark">Bill monthly</span>
      </div>
      <% if @subscription %>
        <h1 class="h3 mb-3">Your Subscription is <span class="text-danger"><%= @subscription.status.capitalize %></span></h1>
        <p class="lead mb-3">Join today and get full access to all the amazing perks and benefits of being a <%= Rails.configuration.name %> member!</p>
        <div class="small mb-3 text-muted fw-bold">
          <%= subscription_trial_days_txt %>
        </div>
        <div class="text-muted small">You can cancel your subscription any time.</div>
      <% else  %>
        <h1 class="h3 mb-3">Start your subscription today for <span class="text-primary">free!</span></h1>
        <p class="lead mb-3">Join today and get full access to all the amazing perks and benefits of being a <%= Rails.configuration.name %> member!</p>
        <div class="small mb-3 d-block" id='after-trial-days-yearly-txt'>
          <span class='fw-bold'><%= I18n.t('free_trial.try_for_days') %></span> days free, then £<span data-pricing-switch-target="price">
          <span class='fw-bold'><%= I18n.t('free_trial.billed_annually') %></span> annually</span> until you cancel your subscription.
        </div>

        <div class="small mb-3 d-none" id='after-trial-days-monthly-txt'>
          <span class='fw-bold'><%= I18n.t('free_trial.try_for_days') %></span> days free, then £<span data-pricing-switch-target="price">
          <span class='fw-bold'><%= I18n.t('free_trial.after_monthly_free_trial_price') %></span> monthly</span> until you cancel your subscription.
        </div>
        <div class="text-muted small">You can cancel your subscription any time.</div>
      <% end  %>
    </div>
    <div class="offset-md-1 col-md-11 col-lg-10 offset-xl-2 col-xl-9 col-xxl-8">
      <div class="d-flex justify-content-center align-items-center h-100 js-payment-form-spinner-wrapper">
        <div class="spinner-grow text-primary" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
      </div>
      <%= render "layouts/alerts" %>
      <form id="payment-form" class="opacity-0 js-payment-form" method='post'>
        <div id="payment-element" class="mb-4">
          <!--Stripe.js injects the Payment Element-->
        </div>
        <div id="card-element" class="mb-4">
          <!--Stripe.js injects the Payment Element-->
        </div>
        <button type="submit" id="submit" class="btn btn-primary w-100">
          <div class="spinner d-none" id="spinner"><%= icon "fas", "spinner", class: "ms-1 fa-spin" %></div>
          <span id="button-text"><%= @subscription ? "Rejoin #{Rails.configuration.name}" : 'Start your free trial' %></span>
        </button>
        <div id="payment-message" class="hidden"></div>
      </form>
    </div>
  </div>
</div>

<script>
    function handleYearlyMonthlySwitch(switchCheckboxEle) {
        let yearlyEle = document.getElementById("free-trial-price-yearly");
        let monthlyEle = document.getElementById("free-trial-price-monthly");
        let afterTrialYearlyTxt = document.getElementById("after-trial-days-yearly-txt");
        let afterTrialMonthlyTxt = document.getElementById("after-trial-days-monthly-txt")
        // When switch to 'Bill Yearly' (default)
        if (switchCheckboxEle.checked){
            // Show yearly price per day
            yearlyEle.classList.remove("d-none");
            yearlyEle.classList.add('d-block');
            afterTrialYearlyTxt.classList.remove("d-none");
            afterTrialYearlyTxt.classList.add('d-block');
            // Hide monthly price per day
            monthlyEle.classList.remove("d-block");
            monthlyEle.classList.add("d-none");
            afterTrialMonthlyTxt.classList.remove("d-block");
            afterTrialMonthlyTxt.classList.add("d-none");

            // When switch to 'Bill Monthly'
        } else {
            // Hide yearly price per day
            yearlyEle.classList.remove("d-block");
            yearlyEle.classList.add('d-none');
            afterTrialYearlyTxt.classList.remove("d-block");
            afterTrialYearlyTxt.classList.add('d-none');
            // Show monthly price per day
            monthlyEle.classList.remove("d-none");
            monthlyEle.classList.add("d-block");
            afterTrialMonthlyTxt.classList.remove("d-none");
            afterTrialMonthlyTxt.classList.add("d-block");
        }
    }
</script>
